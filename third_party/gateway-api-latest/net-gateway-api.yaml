# Copyright 2021 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-gateway-api-admin
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "20231207-d6e5a089"
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        serving.knative.dev/controller: "true"
rules: [] # Rules are automatically filled in by the controller manager.
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: knative-gateway-api-core
  labels:
    serving.knative.dev/controller: "true"
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "20231207-d6e5a089"
rules:
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["httproutes", "referencegrants", "referencepolicies"]
    verbs: ["get", "list", "create", "update", "delete", "patch", "watch"]
  - apiGroups: ["gateway.networking.k8s.io"]
    resources: ["gateways"]
    verbs: ["get", "list", "update", "patch", "watch"]

---
# Copyright 2021 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-gateway
  namespace: knative-serving
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: "20231207-d6e5a089"
data:
  _example: |
    ################################
    #                              #
    #    EXAMPLE CONFIGURATION     #
    #                              #
    ################################

    # ***** WARNING *****
    # This configuration is tentative.
    # The structure might be changed in the future version.
    # ********************
    #
    # visibility: |
    #   <visibility>: |
    #     gatewayClass: GatewayClass Name
    #     gateway: the namespace/name of Gateway
    #     service: the namespace/name of Service for the Gateway
    #
    # The gateway configuration for the default visibility.
    visibility: |
      ExternalIP:
        class: istio
        gateway: istio-system/knative-gateway
        service: istio-system/istio-ingressgateway
      ClusterLocal:
        class: istio
        gateway: istio-system/knative-local-gateway
        service: istio-system/knative-local-gateway

---
# Copyright 2021 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: net-gateway-api-controller
  namespace: knative-serving
  labels:
    networking.knative.dev/ingress-provider: net-gateway-api
    app.kubernetes.io/component: net-gateway-api
    app.kubernetes.io/version: "20231207-d6e5a089"
    app.kubernetes.io/name: knative-serving
spec:
  replicas: 1
  selector:
    matchLabels:
      app: net-gateway-api-controller
  template:
    metadata:
      labels:
        app: net-gateway-api-controller
    spec:
      # To avoid node becoming SPOF, spread our replicas to different nodes.
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app: net-gateway-api-controller
                topologyKey: kubernetes.io/hostname
              weight: 100
      serviceAccountName: controller
      containers:
        - name: controller
          # This is the Go import path for the binary that is containerized
          # and substituted here.
          image: gcr.io/knative-nightly/knative.dev/net-gateway-api/cmd/controller@sha256:e6dd20743bd0cc3d2a080c122e628a5b338961fe41cb2f4d56e1cade11444609
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
            limits:
              cpu: 1000m
              memory: 1000Mi
          ports:
            - name: metrics
              containerPort: 9090
            - name: profiling
              containerPort: 8008
          env:
            - name: SYSTEM_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_LOGGING_NAME
              value: config-logging
            - name: CONFIG_OBSERVABILITY_NAME
              value: config-observability
            - name: METRICS_DOMAIN
              value: knative.dev/net-gateway-api
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop:
                - ALL
            seccompProfile:
              type: RuntimeDefault

---
