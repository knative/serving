# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: ConfigMap
metadata:
  name: config-defaults
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel
  annotations:
    knative.dev/example-checksum: e4c869ee
data:
  _example: "################################\n#                              #\n#
    \   EXAMPLE CONFIGURATION     #\n#                              #\n################################\n\n#
    This block is not actually functional configuration,\n# but serves to illustrate
    the available configuration\n# options and document them in a way that is accessible\n#
    to users that `kubectl edit` this config map.\n#\n# These sample configuration
    options may be copied out of\n# this example block and unindented to be in the
    data block\n# to actually change the configuration.\n\n# revision-timeout-seconds
    contains the default number of\n# seconds to use for the revision's per-request
    timeout, if\n# none is specified.\nrevision-timeout-seconds: \"300\"  # 5 minutes\n\n#
    max-revision-timeout-seconds contains the maximum number of\n# seconds that can
    be used for revision-timeout-seconds.\n# This value must be greater than or equal
    to revision-timeout-seconds.\n# If omitted, the system default is used (600 seconds).\nmax-revision-timeout-seconds:
    \"600\"  # 10 minutes\n\n# revision-cpu-request contains the cpu allocation to
    assign\n# to revisions by default.  If omitted, no value is specified\n# and the
    system default is used.\nrevision-cpu-request: \"400m\"  # 0.4 of a CPU (aka 400
    milli-CPU)\n\n# revision-memory-request contains the memory allocation to assign\n#
    to revisions by default.  If omitted, no value is specified\n# and the system
    default is used.\nrevision-memory-request: \"100M\"  # 100 megabytes of memory\n\n#
    revision-ephemeral-storage-request contains the ephemeral storage\n# allocation
    to assign to revisions by default.  If omitted, no value is\n# specified and the
    system default is used.\nrevision-ephemeral-storage-request: \"500M\"  # 500 megabytes
    of storage\n\n# revision-cpu-limit contains the cpu allocation to limit\n# revisions
    to by default.  If omitted, no value is specified\n# and the system default is
    used.\nrevision-cpu-limit: \"1000m\"  # 1 CPU (aka 1000 milli-CPU)\n\n# revision-memory-limit
    contains the memory allocation to limit\n# revisions to by default.  If omitted,
    no value is specified\n# and the system default is used.\nrevision-memory-limit:
    \"200M\"  # 200 megabytes of memory\n\n# revision-ephemeral-storage-limit contains
    the ephemeral storage\n# allocation to limit revisions to by default.  If omitted,
    no value is\n# specified and the system default is used.\nrevision-ephemeral-storage-limit:
    \"750M\"  # 750 megabytes of storage\n\n# container-name-template contains a template
    for the default\n# container name, if none is specified.  This field supports\n#
    Go templating and is supplied with the ObjectMeta of the\n# enclosing Service
    or Configuration, so values such as\n# {{.Name}} are also valid.\ncontainer-name-template:
    \"user-container\"\n\n# container-concurrency specifies the maximum number\n#
    of requests the Container can handle at once, and requests\n# above this threshold
    are queued.  Setting a value of zero\n# disables this throttling and lets through
    as many requests as\n# the pod receives.\ncontainer-concurrency: \"0\"\n\n# The
    container concurrency max limit is an operator setting ensuring that\n# the individual
    revisions cannot have arbitrary large concurrency\n# values, or autoscaling targets.
    `container-concurrency` default setting\n# must be at or below this value.\n#\n#
    Must be greater than 1.\n#\n# Note: even with this set, a user can choose a containerConcurrency\n#
    of 0 (i.e. unbounded) unless allow-container-concurrency-zero is\n# set to \"false\".\ncontainer-concurrency-max-limit:
    \"1000\"\n\n# allow-container-concurrency-zero controls whether users can\n# specify
    0 (i.e. unbounded) for containerConcurrency.\nallow-container-concurrency-zero:
    \"true\"\n\n# Whether to disable service links on knative services.\n# If set
    to `true` the service links will be disabled for all\n# knative services.\n# If
    set to `false` kubernetes default (true) or explicitly\n# specified value will
    be propagated.\n# See: https://kubernetes.io/docs/concepts/services-networking/connect-applications-service/#accessing-the-service\n#
    In environments with large number of services it is suggeted \n# to be set to
    `false`.\n# See https://github.com/knative/serving/issues/8498.\ndisable-service-links:
    \"false\"\n"
