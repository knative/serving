# Copyright 2018 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: activator
  namespace: knative-serving
  labels:
    serving.knative.dev/release: devel
spec:
  selector:
    matchLabels:
      app: activator
      role: activator
  template:
    metadata:
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        sidecar.istio.io/inject: "true"
      labels:
        app: activator
        role: activator
        serving.knative.dev/release: devel
    spec:
      serviceAccountName: controller
      containers:
      - name: activator
        # This is the Go import path for the binary that is containerized
        # and substituted here.
        image: github.com/knative/serving/cmd/activator
        ports:
        - name: http1-port
          containerPort: 8012
        - name: h2c-port
          containerPort: 8013
        - name: metrics-port
          containerPort: 9090
        args:
          # Disable glog writing into stderr. Our code doesn't use glog
          # and seeing k8s logs in addition to ours is not useful.
        - "-logtostderr=false"
        - "-stderrthreshold=FATAL"
        readinessProbe:
          httpGet:
            # The path does not matter, we look for the kubelet user-agent
            # (or our header below)
            path: /healthz
            port: 8012
            httpHeaders:
            # Istio with mTLS strips the Kubelet user-agent, so pass a header too.
            - name: k-kubelet-probe
              value: "activator"
        livenessProbe:
          httpGet:
            # The path does not matter, we look for kubelet probe headers.
            path: /healthz
            port: 8012
            httpHeaders:
            # Istio with mTLS strips the Kubelet user-agent, so pass a header too.
            - name: k-kubelet-probe
              value: "activator"
        resources:
          # Request 2x what we saw running e2e
          requests:
            cpu: 20m
            memory: 60Mi
          # Limit to 10x the request (20x the observed peak during e2e)
          limits:
            cpu: 200m
            memory: 600Mi
        env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: SYSTEM_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: CONFIG_LOGGING_NAME
            value: config-logging
          - name: CONFIG_OBSERVABILITY_NAME
            value: config-observability
          - name: METRICS_DOMAIN
            value: knative.dev/serving
        volumeMounts:
        - name: config-logging
          mountPath: /etc/config-logging
        - name: config-observability
          mountPath: /etc/config-observability
        securityContext:
          allowPrivilegeEscalation: false
      volumes:
        - name: config-logging
          configMap:
            name: config-logging
        - name: config-observability
          configMap:
            name: config-observability
