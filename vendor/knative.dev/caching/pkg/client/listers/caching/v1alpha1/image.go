/*
Copyright 2020 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/listers"
	"k8s.io/client-go/tools/cache"
	v1alpha1 "knative.dev/caching/pkg/apis/caching/v1alpha1"
)

// ImageLister helps list Images.
// All objects returned here must be treated as read-only.
type ImageLister interface {
	// List lists all Images in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Image, err error)
	// Images returns an object that can list and get Images.
	Images(namespace string) ImageNamespaceLister
	ImageListerExpansion
}

// imageLister implements the ImageLister interface.
type imageLister struct {
	listers.ResourceIndexer[*v1alpha1.Image]
}

// NewImageLister returns a new ImageLister.
func NewImageLister(indexer cache.Indexer) ImageLister {
	return &imageLister{listers.New[*v1alpha1.Image](indexer, v1alpha1.Resource("image"))}
}

// Images returns an object that can list and get Images.
func (s *imageLister) Images(namespace string) ImageNamespaceLister {
	return imageNamespaceLister{listers.NewNamespaced[*v1alpha1.Image](s.ResourceIndexer, namespace)}
}

// ImageNamespaceLister helps list and get Images.
// All objects returned here must be treated as read-only.
type ImageNamespaceLister interface {
	// List lists all Images in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.Image, err error)
	// Get retrieves the Image from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.Image, error)
	ImageNamespaceListerExpansion
}

// imageNamespaceLister implements the ImageNamespaceLister
// interface.
type imageNamespaceLister struct {
	listers.ResourceIndexer[*v1alpha1.Image]
}
