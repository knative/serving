# Copyright 2020 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: domains.networking.internal.knative.dev
  labels:
    app.kubernetes.io/name: knative-serving
    app.kubernetes.io/version: devel
    app.kubernetes.io/component: networking
    knative.dev/crd-install: "true"
spec:
  group: networking.internal.knative.dev
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          description: Domain is a cluster-scoped resource to configure a proxy pool for a given Route.
          type: object
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: 'Spec is the desired state of the Domain. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              type: object
              required:
                - ingressClass
                - loadBalancers
              properties:
                configs:
                  description: Configs contains additional pieces of information to configure ingress proxies.
                  type: array
                  items:
                    description: IngressConfig allows KIngress implementations to add additional information needed for configuring the proxies associated with this Domain. For examples, in our Istio-based Ingress this will contains all references of Istio Gateways associated with this Domain. This could be a reference of a ConfigMap owned by the implementation as well.
                    type: object
                    properties:
                      name:
                        description: Name of the Kingress implementation resource
                        type: string
                      namespace:
                        description: Namespace of the Kingress implementation resource
                        type: string
                      type:
                        description: Type of the Kingress implementation resource
                        type: string
                ingressClass:
                  description: IngressClass tells what Ingress class annotation to use for Routes associated with this Realm.
                  type: string
                loadBalancers:
                  description: LoadBalancers provide addresses (IP addresses, domains) of the load balancers associated with this Domain.  This is used in automatic DNS provisioning like configuration of magic DNS or creating ExternalName services for cluster-local access.
                  type: array
                  items:
                    description: 'LoadBalancerIngressSpec represents the spec of a load-balancer ingress point: traffic intended for the service should be sent to an ingress point.'
                    type: object
                    properties:
                      domain:
                        description: Domain is set for load-balancer ingress points that are DNS based (typically AWS load-balancers)
                        type: string
                      domainInternal:
                        description: "DomainInternal is set if there is a cluster-local DNS name to access the Ingress. \n NOTE: This differs from K8s Ingress, since we also desire to have a cluster-local DNS name to allow routing in case of not having a mesh."
                        type: string
                      ip:
                        description: IP is set for load-balancer ingress points that are IP based (typically GCE or OpenStack load-balancers)
                        type: string
                      meshOnly:
                        description: MeshOnly is set if the Ingress is only load-balanced through a Service mesh.
                        type: boolean
                suffix:
                  description: Suffix specifies the domain suffix to be used. This field replaces the existing config-domain ConfigMap.  Internal Domains can omit this, in which case we will default to the cluster suffix.
                  type: string
            status:
              description: 'Status is the current state of the Domain. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#spec-and-status'
              type: object
              properties:
                annotations:
                  description: Annotations is additional Status fields for the Resource to save some additional State as well as convey more information to the user. This is roughly akin to Annotations on any k8s resource, just the reconciler conveying richer information outwards.
                  type: object
                  additionalProperties:
                    type: string
                conditions:
                  description: Conditions the latest available observations of a resource's current state.
                  type: array
                  items:
                    description: 'Condition defines a readiness condition for a Knative resource. See: https://github.com/kubernetes/community/blob/master/contributors/devel/sig-architecture/api-conventions.md#typical-status-properties'
                    type: object
                    required:
                      - status
                      - type
                    properties:
                      lastTransitionTime:
                        description: LastTransitionTime is the last time the condition transitioned from one status to another. We use VolatileTime in place of metav1.Time to exclude this from creating equality.Semantic differences (all other things held constant).
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      severity:
                        description: Severity with which to treat failures of this type of condition. When this is not specified, it defaults to Error.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of condition.
                        type: string
                observedGeneration:
                  description: ObservedGeneration is the 'Generation' of the Service that was last processed by the controller.
                  type: integer
                  format: int64
  names:
    kind: Domain
    plural: domains
    singular: domain
    categories:
      - knative-internal
      - networking
    shortNames:
      - dom
  scope: Cluster
