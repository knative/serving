// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/quickstore/quickstore.proto

package mako_quickstore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	threshold_analyzer_go_proto "github.com/google/mako/clients/proto/analyzers/threshold_analyzer_go_proto"
	utest_analyzer_go_proto "github.com/google/mako/clients/proto/analyzers/utest_analyzer_go_proto"
	window_deviation_go_proto "github.com/google/mako/clients/proto/analyzers/window_deviation_go_proto"
	mako_go_proto "github.com/google/mako/spec/proto/mako_go_proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type QuickstoreOutput_Status int32

const (
	QuickstoreOutput_SUCCESS       QuickstoreOutput_Status = 1
	QuickstoreOutput_ERROR         QuickstoreOutput_Status = 2
	QuickstoreOutput_ANALYSIS_FAIL QuickstoreOutput_Status = 4
)

var QuickstoreOutput_Status_name = map[int32]string{
	1: "SUCCESS",
	2: "ERROR",
	4: "ANALYSIS_FAIL",
}

var QuickstoreOutput_Status_value = map[string]int32{
	"SUCCESS":       1,
	"ERROR":         2,
	"ANALYSIS_FAIL": 4,
}

func (x QuickstoreOutput_Status) Enum() *QuickstoreOutput_Status {
	p := new(QuickstoreOutput_Status)
	*p = x
	return p
}

func (x QuickstoreOutput_Status) String() string {
	return proto.EnumName(QuickstoreOutput_Status_name, int32(x))
}

func (x *QuickstoreOutput_Status) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(QuickstoreOutput_Status_value, data, "QuickstoreOutput_Status")
	if err != nil {
		return err
	}
	*x = QuickstoreOutput_Status(value)
	return nil
}

func (QuickstoreOutput_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_1383215e6ee55b1f, []int{1, 0}
}

type QuickstoreInput struct {
	BenchmarkKey         *string                                               `protobuf:"bytes,1,opt,name=benchmark_key,json=benchmarkKey" json:"benchmark_key,omitempty"`
	TimestampMs          *float64                                              `protobuf:"fixed64,2,opt,name=timestamp_ms,json=timestampMs" json:"timestamp_ms,omitempty"`
	BuildId              *int64                                                `protobuf:"varint,20,opt,name=build_id,json=buildId" json:"build_id,omitempty"`
	DurationTimeMs       *float64                                              `protobuf:"fixed64,3,opt,name=duration_time_ms,json=durationTimeMs" json:"duration_time_ms,omitempty"`
	Tags                 []string                                              `protobuf:"bytes,4,rep,name=tags" json:"tags,omitempty"`
	HoverText            *string                                               `protobuf:"bytes,14,opt,name=hover_text,json=hoverText" json:"hover_text,omitempty"`
	Description          *string                                               `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	TestPassId           *string                                               `protobuf:"bytes,18,opt,name=test_pass_id,json=testPassId" json:"test_pass_id,omitempty"`
	AnnotationList       []*mako_go_proto.RunAnnotation                        `protobuf:"bytes,7,rep,name=annotation_list,json=annotationList" json:"annotation_list,omitempty"`
	HyperlinkList        []*mako_go_proto.NamedData                            `protobuf:"bytes,8,rep,name=hyperlink_list,json=hyperlinkList" json:"hyperlink_list,omitempty"`
	AuxData              []*mako_go_proto.NamedData                            `protobuf:"bytes,17,rep,name=aux_data,json=auxData" json:"aux_data,omitempty"`
	IgnoreRangeList      []*mako_go_proto.LabeledRange                         `protobuf:"bytes,9,rep,name=ignore_range_list,json=ignoreRangeList" json:"ignore_range_list,omitempty"`
	TempDir              *string                                               `protobuf:"bytes,21,opt,name=temp_dir,json=tempDir" json:"temp_dir,omitempty"`
	DeleteSampleFiles    *bool                                                 `protobuf:"varint,22,opt,name=delete_sample_files,json=deleteSampleFiles,def=1" json:"delete_sample_files,omitempty"`
	AnalysisPass         *QuickstoreInput_ConditionalFields                    `protobuf:"bytes,10,opt,name=analysis_pass,json=analysisPass" json:"analysis_pass,omitempty"`
	AnalysisFail         *QuickstoreInput_ConditionalFields                    `protobuf:"bytes,11,opt,name=analysis_fail,json=analysisFail" json:"analysis_fail,omitempty"`
	ThresholdInputs      []*threshold_analyzer_go_proto.ThresholdAnalyzerInput `protobuf:"bytes,12,rep,name=threshold_inputs,json=thresholdInputs" json:"threshold_inputs,omitempty"`
	WdaInputs            []*window_deviation_go_proto.WindowDeviationInput     `protobuf:"bytes,13,rep,name=wda_inputs,json=wdaInputs" json:"wda_inputs,omitempty"`
	UtestInputs          []*utest_analyzer_go_proto.UTestAnalyzerInput         `protobuf:"bytes,16,rep,name=utest_inputs,json=utestInputs" json:"utest_inputs,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                              `json:"-"`
	XXX_unrecognized     []byte                                                `json:"-"`
	XXX_sizecache        int32                                                 `json:"-"`
}

func (m *QuickstoreInput) Reset()         { *m = QuickstoreInput{} }
func (m *QuickstoreInput) String() string { return proto.CompactTextString(m) }
func (*QuickstoreInput) ProtoMessage()    {}
func (*QuickstoreInput) Descriptor() ([]byte, []int) {
	return fileDescriptor_1383215e6ee55b1f, []int{0}
}

func (m *QuickstoreInput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickstoreInput.Unmarshal(m, b)
}
func (m *QuickstoreInput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickstoreInput.Marshal(b, m, deterministic)
}
func (m *QuickstoreInput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickstoreInput.Merge(m, src)
}
func (m *QuickstoreInput) XXX_Size() int {
	return xxx_messageInfo_QuickstoreInput.Size(m)
}
func (m *QuickstoreInput) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickstoreInput.DiscardUnknown(m)
}

var xxx_messageInfo_QuickstoreInput proto.InternalMessageInfo

const Default_QuickstoreInput_DeleteSampleFiles bool = true

func (m *QuickstoreInput) GetBenchmarkKey() string {
	if m != nil && m.BenchmarkKey != nil {
		return *m.BenchmarkKey
	}
	return ""
}

func (m *QuickstoreInput) GetTimestampMs() float64 {
	if m != nil && m.TimestampMs != nil {
		return *m.TimestampMs
	}
	return 0
}

func (m *QuickstoreInput) GetBuildId() int64 {
	if m != nil && m.BuildId != nil {
		return *m.BuildId
	}
	return 0
}

func (m *QuickstoreInput) GetDurationTimeMs() float64 {
	if m != nil && m.DurationTimeMs != nil {
		return *m.DurationTimeMs
	}
	return 0
}

func (m *QuickstoreInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *QuickstoreInput) GetHoverText() string {
	if m != nil && m.HoverText != nil {
		return *m.HoverText
	}
	return ""
}

func (m *QuickstoreInput) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

func (m *QuickstoreInput) GetTestPassId() string {
	if m != nil && m.TestPassId != nil {
		return *m.TestPassId
	}
	return ""
}

func (m *QuickstoreInput) GetAnnotationList() []*mako_go_proto.RunAnnotation {
	if m != nil {
		return m.AnnotationList
	}
	return nil
}

func (m *QuickstoreInput) GetHyperlinkList() []*mako_go_proto.NamedData {
	if m != nil {
		return m.HyperlinkList
	}
	return nil
}

func (m *QuickstoreInput) GetAuxData() []*mako_go_proto.NamedData {
	if m != nil {
		return m.AuxData
	}
	return nil
}

func (m *QuickstoreInput) GetIgnoreRangeList() []*mako_go_proto.LabeledRange {
	if m != nil {
		return m.IgnoreRangeList
	}
	return nil
}

func (m *QuickstoreInput) GetTempDir() string {
	if m != nil && m.TempDir != nil {
		return *m.TempDir
	}
	return ""
}

func (m *QuickstoreInput) GetDeleteSampleFiles() bool {
	if m != nil && m.DeleteSampleFiles != nil {
		return *m.DeleteSampleFiles
	}
	return Default_QuickstoreInput_DeleteSampleFiles
}

func (m *QuickstoreInput) GetAnalysisPass() *QuickstoreInput_ConditionalFields {
	if m != nil {
		return m.AnalysisPass
	}
	return nil
}

func (m *QuickstoreInput) GetAnalysisFail() *QuickstoreInput_ConditionalFields {
	if m != nil {
		return m.AnalysisFail
	}
	return nil
}

func (m *QuickstoreInput) GetThresholdInputs() []*threshold_analyzer_go_proto.ThresholdAnalyzerInput {
	if m != nil {
		return m.ThresholdInputs
	}
	return nil
}

func (m *QuickstoreInput) GetWdaInputs() []*window_deviation_go_proto.WindowDeviationInput {
	if m != nil {
		return m.WdaInputs
	}
	return nil
}

func (m *QuickstoreInput) GetUtestInputs() []*utest_analyzer_go_proto.UTestAnalyzerInput {
	if m != nil {
		return m.UtestInputs
	}
	return nil
}

type QuickstoreInput_ConditionalFields struct {
	Tags                 []string `protobuf:"bytes,1,rep,name=tags" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *QuickstoreInput_ConditionalFields) Reset()         { *m = QuickstoreInput_ConditionalFields{} }
func (m *QuickstoreInput_ConditionalFields) String() string { return proto.CompactTextString(m) }
func (*QuickstoreInput_ConditionalFields) ProtoMessage()    {}
func (*QuickstoreInput_ConditionalFields) Descriptor() ([]byte, []int) {
	return fileDescriptor_1383215e6ee55b1f, []int{0, 0}
}

func (m *QuickstoreInput_ConditionalFields) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickstoreInput_ConditionalFields.Unmarshal(m, b)
}
func (m *QuickstoreInput_ConditionalFields) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickstoreInput_ConditionalFields.Marshal(b, m, deterministic)
}
func (m *QuickstoreInput_ConditionalFields) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickstoreInput_ConditionalFields.Merge(m, src)
}
func (m *QuickstoreInput_ConditionalFields) XXX_Size() int {
	return xxx_messageInfo_QuickstoreInput_ConditionalFields.Size(m)
}
func (m *QuickstoreInput_ConditionalFields) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickstoreInput_ConditionalFields.DiscardUnknown(m)
}

var xxx_messageInfo_QuickstoreInput_ConditionalFields proto.InternalMessageInfo

func (m *QuickstoreInput_ConditionalFields) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type QuickstoreOutput struct {
	Status               *QuickstoreOutput_Status        `protobuf:"varint,1,opt,name=status,enum=mako.quickstore.QuickstoreOutput_Status" json:"status,omitempty"`
	AnalyzerOutputList   []*mako_go_proto.AnalyzerOutput `protobuf:"bytes,2,rep,name=analyzer_output_list,json=analyzerOutputList" json:"analyzer_output_list,omitempty"`
	SummaryOutput        *string                         `protobuf:"bytes,3,opt,name=summary_output,json=summaryOutput" json:"summary_output,omitempty"`
	RunChartLink         *string                         `protobuf:"bytes,4,opt,name=run_chart_link,json=runChartLink" json:"run_chart_link,omitempty"`
	RunKey               *string                         `protobuf:"bytes,5,opt,name=run_key,json=runKey" json:"run_key,omitempty"`
	GeneratedSampleFiles []string                        `protobuf:"bytes,6,rep,name=generated_sample_files,json=generatedSampleFiles" json:"generated_sample_files,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *QuickstoreOutput) Reset()         { *m = QuickstoreOutput{} }
func (m *QuickstoreOutput) String() string { return proto.CompactTextString(m) }
func (*QuickstoreOutput) ProtoMessage()    {}
func (*QuickstoreOutput) Descriptor() ([]byte, []int) {
	return fileDescriptor_1383215e6ee55b1f, []int{1}
}

func (m *QuickstoreOutput) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_QuickstoreOutput.Unmarshal(m, b)
}
func (m *QuickstoreOutput) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_QuickstoreOutput.Marshal(b, m, deterministic)
}
func (m *QuickstoreOutput) XXX_Merge(src proto.Message) {
	xxx_messageInfo_QuickstoreOutput.Merge(m, src)
}
func (m *QuickstoreOutput) XXX_Size() int {
	return xxx_messageInfo_QuickstoreOutput.Size(m)
}
func (m *QuickstoreOutput) XXX_DiscardUnknown() {
	xxx_messageInfo_QuickstoreOutput.DiscardUnknown(m)
}

var xxx_messageInfo_QuickstoreOutput proto.InternalMessageInfo

func (m *QuickstoreOutput) GetStatus() QuickstoreOutput_Status {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return QuickstoreOutput_SUCCESS
}

func (m *QuickstoreOutput) GetAnalyzerOutputList() []*mako_go_proto.AnalyzerOutput {
	if m != nil {
		return m.AnalyzerOutputList
	}
	return nil
}

func (m *QuickstoreOutput) GetSummaryOutput() string {
	if m != nil && m.SummaryOutput != nil {
		return *m.SummaryOutput
	}
	return ""
}

func (m *QuickstoreOutput) GetRunChartLink() string {
	if m != nil && m.RunChartLink != nil {
		return *m.RunChartLink
	}
	return ""
}

func (m *QuickstoreOutput) GetRunKey() string {
	if m != nil && m.RunKey != nil {
		return *m.RunKey
	}
	return ""
}

func (m *QuickstoreOutput) GetGeneratedSampleFiles() []string {
	if m != nil {
		return m.GeneratedSampleFiles
	}
	return nil
}

func init() {
	proto.RegisterEnum("mako.quickstore.QuickstoreOutput_Status", QuickstoreOutput_Status_name, QuickstoreOutput_Status_value)
	proto.RegisterType((*QuickstoreInput)(nil), "mako.quickstore.QuickstoreInput")
	proto.RegisterType((*QuickstoreInput_ConditionalFields)(nil), "mako.quickstore.QuickstoreInput.ConditionalFields")
	proto.RegisterType((*QuickstoreOutput)(nil), "mako.quickstore.QuickstoreOutput")
}

func init() { proto.RegisterFile("proto/quickstore/quickstore.proto", fileDescriptor_1383215e6ee55b1f) }

var fileDescriptor_1383215e6ee55b1f = []byte{
	// 871 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x54, 0x6d, 0x6f, 0xdb, 0x36,
	0x10, 0x86, 0x13, 0xd7, 0x2f, 0xf4, 0x9b, 0xcc, 0xb8, 0x9d, 0x1a, 0x60, 0x80, 0x9b, 0x6d, 0xa8,
	0xb0, 0x6e, 0xca, 0x90, 0x15, 0x03, 0x36, 0x0c, 0xc3, 0xbc, 0xa4, 0x06, 0x9c, 0xb9, 0xed, 0x26,
	0xa7, 0x28, 0xf6, 0x49, 0x60, 0xcc, 0x8b, 0x4d, 0x58, 0xa2, 0x34, 0x92, 0x6a, 0xe2, 0xfd, 0xad,
	0xfd, 0xae, 0xfd, 0x87, 0x81, 0x47, 0x5b, 0x4e, 0xd2, 0x76, 0x5f, 0xf6, 0x8d, 0x7c, 0xee, 0x79,
	0x1e, 0x1e, 0x8f, 0xbc, 0x23, 0x4f, 0x72, 0x95, 0x99, 0xec, 0xf8, 0xcf, 0x42, 0xcc, 0x57, 0xda,
	0x64, 0x0a, 0x6e, 0x2d, 0x43, 0x8c, 0xd1, 0x5e, 0xca, 0x56, 0x59, 0xb8, 0x83, 0x0f, 0xbf, 0x99,
	0x27, 0x02, 0xa4, 0xd1, 0xc7, 0x4e, 0xcb, 0x24, 0x4b, 0xd6, 0x7f, 0x81, 0xd2, 0xc7, 0x66, 0xa9,
	0x40, 0x2f, 0xb3, 0x84, 0xc7, 0x5b, 0xcc, 0x59, 0x1c, 0x7e, 0xf5, 0x31, 0x45, 0x61, 0x40, 0x9b,
	0xfb, 0xec, 0xf0, 0x63, 0xec, 0x6b, 0x21, 0x79, 0x76, 0x1d, 0x73, 0x78, 0x27, 0x98, 0x11, 0x99,
	0xdc, 0xf0, 0x1f, 0xea, 0x1c, 0xe6, 0x1b, 0x32, 0xe6, 0x8a, 0xcb, 0xa3, 0xbf, 0x1b, 0xa4, 0xf7,
	0x7b, 0x99, 0xf5, 0x44, 0xe6, 0x85, 0xa1, 0x9f, 0x91, 0xce, 0x25, 0xc8, 0xf9, 0x32, 0x65, 0x6a,
	0x15, 0xaf, 0x60, 0xed, 0x57, 0x86, 0x95, 0xa0, 0x19, 0xb5, 0x4b, 0xf0, 0x57, 0x58, 0xd3, 0x27,
	0xa4, 0x6d, 0x44, 0x0a, 0xda, 0xb0, 0x34, 0x8f, 0x53, 0xed, 0xef, 0x0d, 0x2b, 0x41, 0x25, 0x6a,
	0x95, 0xd8, 0x4b, 0x4d, 0x1f, 0x93, 0xc6, 0x65, 0x21, 0x12, 0x1e, 0x0b, 0xee, 0x0f, 0x86, 0x95,
	0x60, 0x3f, 0xaa, 0xe3, 0x7e, 0xc2, 0x69, 0x40, 0x3c, 0x5e, 0x28, 0xcc, 0x2f, 0xb6, 0x12, 0xeb,
	0xb0, 0x8f, 0x0e, 0xdd, 0x2d, 0x7e, 0x21, 0x52, 0x78, 0xa9, 0x29, 0x25, 0x55, 0xc3, 0x16, 0xda,
	0xaf, 0x0e, 0xf7, 0x83, 0x66, 0x84, 0x6b, 0xfa, 0x29, 0x21, 0xcb, 0xec, 0x1d, 0xa8, 0xd8, 0xc0,
	0x8d, 0xf1, 0xbb, 0x98, 0x5d, 0x13, 0x91, 0x0b, 0xb8, 0x31, 0x74, 0x48, 0x5a, 0x1c, 0xf4, 0x5c,
	0x89, 0xdc, 0xfa, 0xf8, 0x35, 0x8c, 0xdf, 0x86, 0xe8, 0x90, 0xb4, 0xb1, 0xa6, 0x39, 0xd3, 0xda,
	0x66, 0x47, 0x91, 0x42, 0x2c, 0xf6, 0x1b, 0xd3, 0x7a, 0xc2, 0xe9, 0x8f, 0xa4, 0xc7, 0xa4, 0xcc,
	0x8c, 0x4b, 0x31, 0x11, 0xda, 0xf8, 0xf5, 0xe1, 0x7e, 0xd0, 0x3a, 0x39, 0x08, 0xb1, 0x7a, 0x51,
	0x21, 0x47, 0x65, 0x3c, 0xea, 0xee, 0xb8, 0x53, 0xa1, 0x0d, 0xfd, 0x8e, 0x74, 0x97, 0xeb, 0x1c,
	0x54, 0x22, 0xe4, 0xca, 0x89, 0x1b, 0x28, 0xee, 0x39, 0xf1, 0x2b, 0x96, 0x02, 0x3f, 0x63, 0x86,
	0x45, 0x9d, 0x92, 0x86, 0xba, 0x2f, 0x49, 0x83, 0x15, 0x37, 0x31, 0x67, 0x86, 0xf9, 0xfd, 0x0f,
	0x2b, 0xea, 0xac, 0xb8, 0xb1, 0x0b, 0xfa, 0x13, 0xe9, 0x8b, 0x85, 0xcc, 0x14, 0xc4, 0x8a, 0xc9,
	0x05, 0xb8, 0x63, 0x9a, 0x28, 0xa2, 0x4e, 0x34, 0x65, 0x97, 0x90, 0x00, 0x8f, 0x6c, 0x38, 0xea,
	0x39, 0x32, 0x6e, 0xf0, 0xac, 0xc7, 0xa4, 0x61, 0x20, 0xcd, 0x63, 0x2e, 0x94, 0xff, 0x10, 0xef,
	0x5f, 0xb7, 0xfb, 0x33, 0xa1, 0xe8, 0x73, 0x72, 0xc0, 0x21, 0x01, 0x03, 0xb1, 0x66, 0x69, 0x9e,
	0x40, 0x7c, 0x25, 0x12, 0xd0, 0xfe, 0xa3, 0x61, 0x25, 0x68, 0xfc, 0x50, 0x35, 0xaa, 0x80, 0xa8,
	0xef, 0x08, 0x33, 0x8c, 0x8f, 0x6d, 0x98, 0xbe, 0x25, 0x1d, 0xfc, 0x85, 0x5a, 0x68, 0x2c, 0xac,
	0x4f, 0x86, 0x95, 0xa0, 0x75, 0x72, 0x12, 0xde, 0x6b, 0x8d, 0xf0, 0xde, 0x7f, 0x0b, 0x4f, 0x33,
	0xc9, 0x85, 0xad, 0x1d, 0x4b, 0xc6, 0x02, 0x12, 0xae, 0xa3, 0xf6, 0xd6, 0xc8, 0xbe, 0xc6, 0x1d,
	0xe3, 0x2b, 0x26, 0x12, 0xbf, 0xf5, 0xff, 0x8d, 0xc7, 0x4c, 0x24, 0x94, 0x13, 0x6f, 0xd7, 0x8d,
	0xc2, 0x4a, 0xb4, 0xdf, 0xc6, 0x0a, 0x7e, 0xef, 0xbc, 0xcb, 0xae, 0x0a, 0x3f, 0xd0, 0xb5, 0x17,
	0x5b, 0x68, 0xb4, 0x41, 0xf0, 0xd0, 0xa8, 0x57, 0x52, 0x71, 0xaf, 0xe9, 0x39, 0x21, 0xd7, 0x9c,
	0x6d, 0xfd, 0x3b, 0xe8, 0xff, 0xcc, 0xf9, 0xbf, 0xd7, 0xab, 0x6f, 0x11, 0x38, 0xdb, 0xee, 0x9d,
	0x63, 0xf3, 0x9a, 0xb3, 0xd2, 0xab, 0xed, 0xa6, 0xc1, 0xc6, 0xcd, 0x43, 0xb7, 0xa7, 0xce, 0xed,
	0xde, 0x9c, 0x78, 0x73, 0x01, 0xda, 0xdc, 0xcd, 0xad, 0x85, 0x14, 0xe7, 0x75, 0xf8, 0x94, 0xf4,
	0xdf, 0x2b, 0x50, 0xd9, 0x6e, 0x95, 0x5d, 0xbb, 0x9d, 0x57, 0x1b, 0x3d, 0xcf, 0x3b, 0xaf, 0x36,
	0x0e, 0xbc, 0xc1, 0x79, 0xb5, 0xf1, 0xc0, 0xab, 0x1d, 0xfd, 0xb3, 0x47, 0xbc, 0x5d, 0xb1, 0x5f,
	0x17, 0xc6, 0x8e, 0x8d, 0x9f, 0x49, 0x4d, 0x1b, 0x66, 0x0a, 0x8d, 0xf3, 0xa2, 0x7b, 0x12, 0xfc,
	0xc7, 0xfb, 0x38, 0x49, 0x38, 0x43, 0x7e, 0xb4, 0xd1, 0xd1, 0x31, 0x19, 0x6c, 0xb3, 0x8f, 0x33,
	0x64, 0xb8, 0x5f, 0xbd, 0x87, 0xb7, 0x1c, 0x38, 0xbf, 0xed, 0x8d, 0x9c, 0x45, 0x44, 0xd9, 0x9d,
	0x3d, 0x7e, 0xed, 0x2f, 0x48, 0x57, 0x17, 0x69, 0xca, 0xd4, 0x7a, 0x63, 0x83, 0xb3, 0xa5, 0x19,
	0x75, 0x36, 0xe8, 0x26, 0xe1, 0xcf, 0x49, 0x57, 0x15, 0x32, 0x9e, 0x2f, 0x99, 0xb2, 0x07, 0xc9,
	0x95, 0x5f, 0x75, 0x83, 0x4e, 0x15, 0xf2, 0xd4, 0x82, 0x53, 0x21, 0x57, 0xf4, 0x13, 0x52, 0xb7,
	0x2c, 0x3b, 0x07, 0x1f, 0x60, 0xb8, 0xa6, 0x0a, 0x69, 0x27, 0xe0, 0x73, 0xf2, 0x68, 0x01, 0x12,
	0x14, 0x33, 0xc0, 0xef, 0x36, 0x4a, 0x0d, 0x8b, 0x37, 0x28, 0xa3, 0xb7, 0xba, 0xe4, 0xe8, 0x5b,
	0x52, 0x73, 0xb7, 0xa6, 0x2d, 0x52, 0x9f, 0xbd, 0x39, 0x3d, 0x7d, 0x31, 0x9b, 0x79, 0x15, 0xda,
	0x24, 0x0f, 0x5e, 0x44, 0xd1, 0xeb, 0xc8, 0xdb, 0xa3, 0x7d, 0xd2, 0x19, 0xbd, 0x1a, 0x4d, 0xff,
	0x98, 0x4d, 0x66, 0xf1, 0x78, 0x34, 0x99, 0x7a, 0xd5, 0x5f, 0xbe, 0x26, 0xcf, 0xe6, 0x59, 0x1a,
	0x2e, 0xb2, 0x6c, 0x91, 0x40, 0x68, 0xdf, 0x50, 0xc8, 0x45, 0x98, 0x83, 0xba, 0xca, 0x54, 0xca,
	0xe4, 0x1c, 0x5c, 0x69, 0x96, 0x90, 0xe4, 0xa0, 0xf4, 0xbf, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7a,
	0x4c, 0x30, 0x63, 0xb0, 0x06, 0x00, 0x00,
}
