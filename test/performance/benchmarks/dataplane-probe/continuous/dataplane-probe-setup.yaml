# Copyright 2019 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: activator
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "5"
        autoscaling.knative.dev/maxScale: "5"
        # Always hook the activator in.
        autoscaling.knative.dev/targetBurstCapacity: "-1"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: activator-with-cc
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "5"
        autoscaling.knative.dev/maxScale: "5"
        # Always hook the activator in.
        autoscaling.knative.dev/targetBurstCapacity: "-1"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 100
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: activator-with-cc-10
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "15"
        autoscaling.knative.dev/maxScale: "15"
        # Always hook the activator in.
        autoscaling.knative.dev/targetBurstCapacity: "-1"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 10
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: activator-with-cc-1
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "150"
        autoscaling.knative.dev/maxScale: "150"
        # Always hook the activator in.
        autoscaling.knative.dev/targetBurstCapacity: "-1"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 1
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: queue-proxy
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "5"
        autoscaling.knative.dev/maxScale: "5"
        # Only hook the activator in when scaled to zero.
        autoscaling.knative.dev/targetBurstCapacity: "0"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: queue-proxy-with-cc
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "5"
        autoscaling.knative.dev/maxScale: "5"
        # Only hook the activator in when scaled to zero.
        autoscaling.knative.dev/targetBurstCapacity: "0"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 100
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: queue-proxy-with-cc-10
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "15"
        autoscaling.knative.dev/maxScale: "15"
        # Only hook the activator in when scaled to zero.
        autoscaling.knative.dev/targetBurstCapacity: "0"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 10
---
apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: queue-proxy-with-cc-1
spec:
  template:
    metadata:
      annotations:
        autoscaling.knative.dev/minScale: "150"
        autoscaling.knative.dev/maxScale: "150"
        # Only hook the activator in when scaled to zero.
        autoscaling.knative.dev/targetBurstCapacity: "0"
    spec:
      containers:
      - image: ko://knative.dev/serving/test/test_images/autoscale
      containerConcurrency: 1
---
apiVersion: v1
kind: Service
metadata:
  name: deployment
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: blah
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment
spec:
  replicas: 5
  selector:
    matchLabels:
      app: blah
  template:
    metadata:
      labels:
        app: blah
    spec:
      containers:
      - name: user-container
        image: ko://knative.dev/serving/test/test_images/autoscale
        ports:
        - name: blah
          containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: istio
spec:
  externalName: istio-ingressgateway.istio-system.svc.cluster.local
  sessionAffinity: None
  type: ExternalName
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: dataplane-probe
spec:
  gateways:
  - knative-ingress-gateway.knative-serving.svc.cluster.local
  hosts:
  - istio.default
  - istio.default.svc
  - istio.default.svc.cluster.local
  http:
  - match:
    - authority:
        regex: ^istio\.default(?::\d{1,5})?$
    - authority:
        regex: ^istio\.default\.svc(?::\d{1,5})?$
    - authority:
        regex: ^istio\.default\.svc\.cluster\.local(?::\d{1,5})?$
    route:
    - destination:
        host: deployment.default.svc.cluster.local
        port:
          number: 80
      weight: 100
