// +build !ignore_autogenerated

/*
Copyright 2019 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by conversion-gen. DO NOT EDIT.

package v1beta1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	apis "knative.dev/pkg/apis"
	v1alpha1 "knative.dev/pkg/apis/duck/v1alpha1"
	duckv1beta1 "knative.dev/pkg/apis/duck/v1beta1"
	serving "knative.dev/serving/pkg/apis/internalversions/serving"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*Configuration)(nil), (*serving.Configuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Configuration_To_serving_Configuration(a.(*Configuration), b.(*serving.Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.Configuration)(nil), (*Configuration)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_Configuration_To_v1beta1_Configuration(a.(*serving.Configuration), b.(*Configuration), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigurationList)(nil), (*serving.ConfigurationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConfigurationList_To_serving_ConfigurationList(a.(*ConfigurationList), b.(*serving.ConfigurationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ConfigurationList)(nil), (*ConfigurationList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ConfigurationList_To_v1beta1_ConfigurationList(a.(*serving.ConfigurationList), b.(*ConfigurationList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigurationSpec)(nil), (*serving.ConfigurationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConfigurationSpec_To_serving_ConfigurationSpec(a.(*ConfigurationSpec), b.(*serving.ConfigurationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ConfigurationSpec)(nil), (*ConfigurationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ConfigurationSpec_To_v1beta1_ConfigurationSpec(a.(*serving.ConfigurationSpec), b.(*ConfigurationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigurationStatus)(nil), (*serving.ConfigurationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus(a.(*ConfigurationStatus), b.(*serving.ConfigurationStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ConfigurationStatus)(nil), (*ConfigurationStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus(a.(*serving.ConfigurationStatus), b.(*ConfigurationStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigurationStatusFields)(nil), (*serving.ConfigurationStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(a.(*ConfigurationStatusFields), b.(*serving.ConfigurationStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ConfigurationStatusFields)(nil), (*ConfigurationStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(a.(*serving.ConfigurationStatusFields), b.(*ConfigurationStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Revision)(nil), (*serving.Revision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Revision_To_serving_Revision(a.(*Revision), b.(*serving.Revision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.Revision)(nil), (*Revision)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_Revision_To_v1beta1_Revision(a.(*serving.Revision), b.(*Revision), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RevisionList)(nil), (*serving.RevisionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionList_To_serving_RevisionList(a.(*RevisionList), b.(*serving.RevisionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RevisionList)(nil), (*RevisionList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionList_To_v1beta1_RevisionList(a.(*serving.RevisionList), b.(*RevisionList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RevisionSpec)(nil), (*serving.RevisionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionSpec_To_serving_RevisionSpec(a.(*RevisionSpec), b.(*serving.RevisionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RevisionSpec)(nil), (*RevisionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionSpec_To_v1beta1_RevisionSpec(a.(*serving.RevisionSpec), b.(*RevisionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RevisionStatus)(nil), (*serving.RevisionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionStatus_To_serving_RevisionStatus(a.(*RevisionStatus), b.(*serving.RevisionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RevisionStatus)(nil), (*RevisionStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionStatus_To_v1beta1_RevisionStatus(a.(*serving.RevisionStatus), b.(*RevisionStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RevisionTemplateSpec)(nil), (*serving.RevisionTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionTemplateSpec_To_serving_RevisionTemplateSpec(a.(*RevisionTemplateSpec), b.(*serving.RevisionTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RevisionTemplateSpec)(nil), (*RevisionTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionTemplateSpec_To_v1beta1_RevisionTemplateSpec(a.(*serving.RevisionTemplateSpec), b.(*RevisionTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Route)(nil), (*serving.Route)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Route_To_serving_Route(a.(*Route), b.(*serving.Route), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.Route)(nil), (*Route)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_Route_To_v1beta1_Route(a.(*serving.Route), b.(*Route), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteList)(nil), (*serving.RouteList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteList_To_serving_RouteList(a.(*RouteList), b.(*serving.RouteList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RouteList)(nil), (*RouteList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteList_To_v1beta1_RouteList(a.(*serving.RouteList), b.(*RouteList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteSpec)(nil), (*serving.RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteSpec_To_serving_RouteSpec(a.(*RouteSpec), b.(*serving.RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RouteSpec)(nil), (*RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteSpec_To_v1beta1_RouteSpec(a.(*serving.RouteSpec), b.(*RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteStatus)(nil), (*serving.RouteStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteStatus_To_serving_RouteStatus(a.(*RouteStatus), b.(*serving.RouteStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RouteStatus)(nil), (*RouteStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteStatus_To_v1beta1_RouteStatus(a.(*serving.RouteStatus), b.(*RouteStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*RouteStatusFields)(nil), (*serving.RouteStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteStatusFields_To_serving_RouteStatusFields(a.(*RouteStatusFields), b.(*serving.RouteStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.RouteStatusFields)(nil), (*RouteStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteStatusFields_To_v1beta1_RouteStatusFields(a.(*serving.RouteStatusFields), b.(*RouteStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*Service)(nil), (*serving.Service)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_Service_To_serving_Service(a.(*Service), b.(*serving.Service), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.Service)(nil), (*Service)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_Service_To_v1beta1_Service(a.(*serving.Service), b.(*Service), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceList)(nil), (*serving.ServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ServiceList_To_serving_ServiceList(a.(*ServiceList), b.(*serving.ServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ServiceList)(nil), (*ServiceList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ServiceList_To_v1beta1_ServiceList(a.(*serving.ServiceList), b.(*ServiceList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceSpec)(nil), (*serving.ServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ServiceSpec_To_serving_ServiceSpec(a.(*ServiceSpec), b.(*serving.ServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ServiceSpec)(nil), (*ServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ServiceSpec_To_v1beta1_ServiceSpec(a.(*serving.ServiceSpec), b.(*ServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ServiceStatus)(nil), (*serving.ServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ServiceStatus_To_serving_ServiceStatus(a.(*ServiceStatus), b.(*serving.ServiceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.ServiceStatus)(nil), (*ServiceStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ServiceStatus_To_v1beta1_ServiceStatus(a.(*serving.ServiceStatus), b.(*ServiceStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*TrafficTarget)(nil), (*serving.TrafficTarget)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_TrafficTarget_To_serving_TrafficTarget(a.(*TrafficTarget), b.(*serving.TrafficTarget), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*serving.TrafficTarget)(nil), (*TrafficTarget)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_TrafficTarget_To_v1beta1_TrafficTarget(a.(*serving.TrafficTarget), b.(*TrafficTarget), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.ConfigurationSpec)(nil), (*ConfigurationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ConfigurationSpec_To_v1beta1_ConfigurationSpec(a.(*serving.ConfigurationSpec), b.(*ConfigurationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.RevisionSpec)(nil), (*RevisionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionSpec_To_v1beta1_RevisionSpec(a.(*serving.RevisionSpec), b.(*RevisionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.RevisionTemplateSpec)(nil), (*RevisionTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RevisionTemplateSpec_To_v1beta1_RevisionTemplateSpec(a.(*serving.RevisionTemplateSpec), b.(*RevisionTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.RouteSpec)(nil), (*RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteSpec_To_v1beta1_RouteSpec(a.(*serving.RouteSpec), b.(*RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.RouteStatusFields)(nil), (*RouteStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_RouteStatusFields_To_v1beta1_RouteStatusFields(a.(*serving.RouteStatusFields), b.(*RouteStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.ServiceSpec)(nil), (*ServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_ServiceSpec_To_v1beta1_ServiceSpec(a.(*serving.ServiceSpec), b.(*ServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*serving.TrafficTarget)(nil), (*TrafficTarget)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_serving_TrafficTarget_To_v1beta1_TrafficTarget(a.(*serving.TrafficTarget), b.(*TrafficTarget), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ConfigurationSpec)(nil), (*serving.ConfigurationSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ConfigurationSpec_To_serving_ConfigurationSpec(a.(*ConfigurationSpec), b.(*serving.ConfigurationSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RevisionSpec)(nil), (*serving.RevisionSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionSpec_To_serving_RevisionSpec(a.(*RevisionSpec), b.(*serving.RevisionSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RevisionTemplateSpec)(nil), (*serving.RevisionTemplateSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RevisionTemplateSpec_To_serving_RevisionTemplateSpec(a.(*RevisionTemplateSpec), b.(*serving.RevisionTemplateSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RouteSpec)(nil), (*serving.RouteSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteSpec_To_serving_RouteSpec(a.(*RouteSpec), b.(*serving.RouteSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*RouteStatusFields)(nil), (*serving.RouteStatusFields)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_RouteStatusFields_To_serving_RouteStatusFields(a.(*RouteStatusFields), b.(*serving.RouteStatusFields), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*ServiceSpec)(nil), (*serving.ServiceSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_ServiceSpec_To_serving_ServiceSpec(a.(*ServiceSpec), b.(*serving.ServiceSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddConversionFunc((*TrafficTarget)(nil), (*serving.TrafficTarget)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1beta1_TrafficTarget_To_serving_TrafficTarget(a.(*TrafficTarget), b.(*serving.TrafficTarget), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Configuration_To_serving_Configuration(in *Configuration, out *serving.Configuration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_ConfigurationSpec_To_serving_ConfigurationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Configuration_To_serving_Configuration is an autogenerated conversion function.
func Convert_v1beta1_Configuration_To_serving_Configuration(in *Configuration, out *serving.Configuration, s conversion.Scope) error {
	return autoConvert_v1beta1_Configuration_To_serving_Configuration(in, out, s)
}

func autoConvert_serving_Configuration_To_v1beta1_Configuration(in *serving.Configuration, out *Configuration, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serving_ConfigurationSpec_To_v1beta1_ConfigurationSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_Configuration_To_v1beta1_Configuration is an autogenerated conversion function.
func Convert_serving_Configuration_To_v1beta1_Configuration(in *serving.Configuration, out *Configuration, s conversion.Scope) error {
	return autoConvert_serving_Configuration_To_v1beta1_Configuration(in, out, s)
}

func autoConvert_v1beta1_ConfigurationList_To_serving_ConfigurationList(in *ConfigurationList, out *serving.ConfigurationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]serving.Configuration, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Configuration_To_serving_Configuration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_ConfigurationList_To_serving_ConfigurationList is an autogenerated conversion function.
func Convert_v1beta1_ConfigurationList_To_serving_ConfigurationList(in *ConfigurationList, out *serving.ConfigurationList, s conversion.Scope) error {
	return autoConvert_v1beta1_ConfigurationList_To_serving_ConfigurationList(in, out, s)
}

func autoConvert_serving_ConfigurationList_To_v1beta1_ConfigurationList(in *serving.ConfigurationList, out *ConfigurationList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Configuration, len(*in))
		for i := range *in {
			if err := Convert_serving_Configuration_To_v1beta1_Configuration(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_serving_ConfigurationList_To_v1beta1_ConfigurationList is an autogenerated conversion function.
func Convert_serving_ConfigurationList_To_v1beta1_ConfigurationList(in *serving.ConfigurationList, out *ConfigurationList, s conversion.Scope) error {
	return autoConvert_serving_ConfigurationList_To_v1beta1_ConfigurationList(in, out, s)
}

func autoConvert_v1beta1_ConfigurationSpec_To_serving_ConfigurationSpec(in *ConfigurationSpec, out *serving.ConfigurationSpec, s conversion.Scope) error {
	// WARNING: in.Template requires manual conversion: inconvertible types (knative.dev/serving/pkg/apis/serving/v1beta1.RevisionTemplateSpec vs *knative.dev/serving/pkg/apis/internalversions/serving.RevisionTemplateSpec)
	return nil
}

func autoConvert_serving_ConfigurationSpec_To_v1beta1_ConfigurationSpec(in *serving.ConfigurationSpec, out *ConfigurationSpec, s conversion.Scope) error {
	// WARNING: in.DeprecatedGeneration requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedBuild requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedRevisionTemplate requires manual conversion: does not exist in peer-type
	// WARNING: in.Template requires manual conversion: inconvertible types (*knative.dev/serving/pkg/apis/internalversions/serving.RevisionTemplateSpec vs knative.dev/serving/pkg/apis/serving/v1beta1.RevisionTemplateSpec)
	return nil
}

func autoConvert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus(in *ConfigurationStatus, out *serving.ConfigurationStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(&in.ConfigurationStatusFields, &out.ConfigurationStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus is an autogenerated conversion function.
func Convert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus(in *ConfigurationStatus, out *serving.ConfigurationStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_ConfigurationStatus_To_serving_ConfigurationStatus(in, out, s)
}

func autoConvert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus(in *serving.ConfigurationStatus, out *ConfigurationStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(&in.ConfigurationStatusFields, &out.ConfigurationStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus is an autogenerated conversion function.
func Convert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus(in *serving.ConfigurationStatus, out *ConfigurationStatus, s conversion.Scope) error {
	return autoConvert_serving_ConfigurationStatus_To_v1beta1_ConfigurationStatus(in, out, s)
}

func autoConvert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(in *ConfigurationStatusFields, out *serving.ConfigurationStatusFields, s conversion.Scope) error {
	out.LatestReadyRevisionName = in.LatestReadyRevisionName
	out.LatestCreatedRevisionName = in.LatestCreatedRevisionName
	return nil
}

// Convert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields is an autogenerated conversion function.
func Convert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(in *ConfigurationStatusFields, out *serving.ConfigurationStatusFields, s conversion.Scope) error {
	return autoConvert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(in, out, s)
}

func autoConvert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(in *serving.ConfigurationStatusFields, out *ConfigurationStatusFields, s conversion.Scope) error {
	out.LatestReadyRevisionName = in.LatestReadyRevisionName
	out.LatestCreatedRevisionName = in.LatestCreatedRevisionName
	return nil
}

// Convert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields is an autogenerated conversion function.
func Convert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(in *serving.ConfigurationStatusFields, out *ConfigurationStatusFields, s conversion.Scope) error {
	return autoConvert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(in, out, s)
}

func autoConvert_v1beta1_Revision_To_serving_Revision(in *Revision, out *serving.Revision, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_RevisionSpec_To_serving_RevisionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_RevisionStatus_To_serving_RevisionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Revision_To_serving_Revision is an autogenerated conversion function.
func Convert_v1beta1_Revision_To_serving_Revision(in *Revision, out *serving.Revision, s conversion.Scope) error {
	return autoConvert_v1beta1_Revision_To_serving_Revision(in, out, s)
}

func autoConvert_serving_Revision_To_v1beta1_Revision(in *serving.Revision, out *Revision, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serving_RevisionSpec_To_v1beta1_RevisionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_serving_RevisionStatus_To_v1beta1_RevisionStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_Revision_To_v1beta1_Revision is an autogenerated conversion function.
func Convert_serving_Revision_To_v1beta1_Revision(in *serving.Revision, out *Revision, s conversion.Scope) error {
	return autoConvert_serving_Revision_To_v1beta1_Revision(in, out, s)
}

func autoConvert_v1beta1_RevisionList_To_serving_RevisionList(in *RevisionList, out *serving.RevisionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]serving.Revision, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Revision_To_serving_Revision(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_RevisionList_To_serving_RevisionList is an autogenerated conversion function.
func Convert_v1beta1_RevisionList_To_serving_RevisionList(in *RevisionList, out *serving.RevisionList, s conversion.Scope) error {
	return autoConvert_v1beta1_RevisionList_To_serving_RevisionList(in, out, s)
}

func autoConvert_serving_RevisionList_To_v1beta1_RevisionList(in *serving.RevisionList, out *RevisionList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Revision, len(*in))
		for i := range *in {
			if err := Convert_serving_Revision_To_v1beta1_Revision(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_serving_RevisionList_To_v1beta1_RevisionList is an autogenerated conversion function.
func Convert_serving_RevisionList_To_v1beta1_RevisionList(in *serving.RevisionList, out *RevisionList, s conversion.Scope) error {
	return autoConvert_serving_RevisionList_To_v1beta1_RevisionList(in, out, s)
}

func autoConvert_v1beta1_RevisionSpec_To_serving_RevisionSpec(in *RevisionSpec, out *serving.RevisionSpec, s conversion.Scope) error {
	out.PodSpec = in.PodSpec
	out.ContainerConcurrency = serving.RevisionContainerConcurrencyType(in.ContainerConcurrency)
	out.TimeoutSeconds = (*int64)(unsafe.Pointer(in.TimeoutSeconds))
	return nil
}

func autoConvert_serving_RevisionSpec_To_v1beta1_RevisionSpec(in *serving.RevisionSpec, out *RevisionSpec, s conversion.Scope) error {
	out.PodSpec = in.PodSpec
	out.ContainerConcurrency = RevisionContainerConcurrencyType(in.ContainerConcurrency)
	out.TimeoutSeconds = (*int64)(unsafe.Pointer(in.TimeoutSeconds))
	// WARNING: in.DeprecatedGeneration requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedServingState requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedConcurrencyModel requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedBuildName requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedBuildRef requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedContainer requires manual conversion: does not exist in peer-type
	return nil
}

func autoConvert_v1beta1_RevisionStatus_To_serving_RevisionStatus(in *RevisionStatus, out *serving.RevisionStatus, s conversion.Scope) error {
	out.Status = in.Status
	out.ServiceName = in.ServiceName
	out.LogURL = in.LogURL
	out.ImageDigest = in.ImageDigest
	return nil
}

// Convert_v1beta1_RevisionStatus_To_serving_RevisionStatus is an autogenerated conversion function.
func Convert_v1beta1_RevisionStatus_To_serving_RevisionStatus(in *RevisionStatus, out *serving.RevisionStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_RevisionStatus_To_serving_RevisionStatus(in, out, s)
}

func autoConvert_serving_RevisionStatus_To_v1beta1_RevisionStatus(in *serving.RevisionStatus, out *RevisionStatus, s conversion.Scope) error {
	out.Status = in.Status
	out.ServiceName = in.ServiceName
	out.LogURL = in.LogURL
	out.ImageDigest = in.ImageDigest
	return nil
}

// Convert_serving_RevisionStatus_To_v1beta1_RevisionStatus is an autogenerated conversion function.
func Convert_serving_RevisionStatus_To_v1beta1_RevisionStatus(in *serving.RevisionStatus, out *RevisionStatus, s conversion.Scope) error {
	return autoConvert_serving_RevisionStatus_To_v1beta1_RevisionStatus(in, out, s)
}

func autoConvert_v1beta1_RevisionTemplateSpec_To_serving_RevisionTemplateSpec(in *RevisionTemplateSpec, out *serving.RevisionTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_RevisionSpec_To_serving_RevisionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_serving_RevisionTemplateSpec_To_v1beta1_RevisionTemplateSpec(in *serving.RevisionTemplateSpec, out *RevisionTemplateSpec, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serving_RevisionSpec_To_v1beta1_RevisionSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_Route_To_serving_Route(in *Route, out *serving.Route, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_RouteSpec_To_serving_RouteSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_RouteStatus_To_serving_RouteStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Route_To_serving_Route is an autogenerated conversion function.
func Convert_v1beta1_Route_To_serving_Route(in *Route, out *serving.Route, s conversion.Scope) error {
	return autoConvert_v1beta1_Route_To_serving_Route(in, out, s)
}

func autoConvert_serving_Route_To_v1beta1_Route(in *serving.Route, out *Route, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serving_RouteSpec_To_v1beta1_RouteSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_serving_RouteStatus_To_v1beta1_RouteStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_Route_To_v1beta1_Route is an autogenerated conversion function.
func Convert_serving_Route_To_v1beta1_Route(in *serving.Route, out *Route, s conversion.Scope) error {
	return autoConvert_serving_Route_To_v1beta1_Route(in, out, s)
}

func autoConvert_v1beta1_RouteList_To_serving_RouteList(in *RouteList, out *serving.RouteList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]serving.Route, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Route_To_serving_Route(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_RouteList_To_serving_RouteList is an autogenerated conversion function.
func Convert_v1beta1_RouteList_To_serving_RouteList(in *RouteList, out *serving.RouteList, s conversion.Scope) error {
	return autoConvert_v1beta1_RouteList_To_serving_RouteList(in, out, s)
}

func autoConvert_serving_RouteList_To_v1beta1_RouteList(in *serving.RouteList, out *RouteList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Route, len(*in))
		for i := range *in {
			if err := Convert_serving_Route_To_v1beta1_Route(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_serving_RouteList_To_v1beta1_RouteList is an autogenerated conversion function.
func Convert_serving_RouteList_To_v1beta1_RouteList(in *serving.RouteList, out *RouteList, s conversion.Scope) error {
	return autoConvert_serving_RouteList_To_v1beta1_RouteList(in, out, s)
}

func autoConvert_v1beta1_RouteSpec_To_serving_RouteSpec(in *RouteSpec, out *serving.RouteSpec, s conversion.Scope) error {
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]serving.TrafficTarget, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_TrafficTarget_To_serving_TrafficTarget(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Traffic = nil
	}
	return nil
}

func autoConvert_serving_RouteSpec_To_v1beta1_RouteSpec(in *serving.RouteSpec, out *RouteSpec, s conversion.Scope) error {
	// WARNING: in.DeprecatedGeneration requires manual conversion: does not exist in peer-type
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]TrafficTarget, len(*in))
		for i := range *in {
			if err := Convert_serving_TrafficTarget_To_v1beta1_TrafficTarget(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Traffic = nil
	}
	return nil
}

func autoConvert_v1beta1_RouteStatus_To_serving_RouteStatus(in *RouteStatus, out *serving.RouteStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_v1beta1_RouteStatusFields_To_serving_RouteStatusFields(&in.RouteStatusFields, &out.RouteStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_RouteStatus_To_serving_RouteStatus is an autogenerated conversion function.
func Convert_v1beta1_RouteStatus_To_serving_RouteStatus(in *RouteStatus, out *serving.RouteStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_RouteStatus_To_serving_RouteStatus(in, out, s)
}

func autoConvert_serving_RouteStatus_To_v1beta1_RouteStatus(in *serving.RouteStatus, out *RouteStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_serving_RouteStatusFields_To_v1beta1_RouteStatusFields(&in.RouteStatusFields, &out.RouteStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_RouteStatus_To_v1beta1_RouteStatus is an autogenerated conversion function.
func Convert_serving_RouteStatus_To_v1beta1_RouteStatus(in *serving.RouteStatus, out *RouteStatus, s conversion.Scope) error {
	return autoConvert_serving_RouteStatus_To_v1beta1_RouteStatus(in, out, s)
}

func autoConvert_v1beta1_RouteStatusFields_To_serving_RouteStatusFields(in *RouteStatusFields, out *serving.RouteStatusFields, s conversion.Scope) error {
	out.URL = (*apis.URL)(unsafe.Pointer(in.URL))
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(v1alpha1.Addressable)
		// TODO: Inefficient conversion - can we improve it?
		if err := s.Convert(*in, *out, 0); err != nil {
			return err
		}
	} else {
		out.Address = nil
	}
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]serving.TrafficTarget, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_TrafficTarget_To_serving_TrafficTarget(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Traffic = nil
	}
	return nil
}

func autoConvert_serving_RouteStatusFields_To_v1beta1_RouteStatusFields(in *serving.RouteStatusFields, out *RouteStatusFields, s conversion.Scope) error {
	out.URL = (*apis.URL)(unsafe.Pointer(in.URL))
	// WARNING: in.DeprecatedDomain requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedDomainInternal requires manual conversion: does not exist in peer-type
	if in.Address != nil {
		in, out := &in.Address, &out.Address
		*out = new(duckv1beta1.Addressable)
		// TODO: Inefficient conversion - can we improve it?
		if err := s.Convert(*in, *out, 0); err != nil {
			return err
		}
	} else {
		out.Address = nil
	}
	if in.Traffic != nil {
		in, out := &in.Traffic, &out.Traffic
		*out = make([]TrafficTarget, len(*in))
		for i := range *in {
			if err := Convert_serving_TrafficTarget_To_v1beta1_TrafficTarget(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Traffic = nil
	}
	return nil
}

func autoConvert_v1beta1_Service_To_serving_Service(in *Service, out *serving.Service, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1beta1_ServiceSpec_To_serving_ServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_ServiceStatus_To_serving_ServiceStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_Service_To_serving_Service is an autogenerated conversion function.
func Convert_v1beta1_Service_To_serving_Service(in *Service, out *serving.Service, s conversion.Scope) error {
	return autoConvert_v1beta1_Service_To_serving_Service(in, out, s)
}

func autoConvert_serving_Service_To_v1beta1_Service(in *serving.Service, out *Service, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_serving_ServiceSpec_To_v1beta1_ServiceSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_serving_ServiceStatus_To_v1beta1_ServiceStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_Service_To_v1beta1_Service is an autogenerated conversion function.
func Convert_serving_Service_To_v1beta1_Service(in *serving.Service, out *Service, s conversion.Scope) error {
	return autoConvert_serving_Service_To_v1beta1_Service(in, out, s)
}

func autoConvert_v1beta1_ServiceList_To_serving_ServiceList(in *ServiceList, out *serving.ServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]serving.Service, len(*in))
		for i := range *in {
			if err := Convert_v1beta1_Service_To_serving_Service(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_v1beta1_ServiceList_To_serving_ServiceList is an autogenerated conversion function.
func Convert_v1beta1_ServiceList_To_serving_ServiceList(in *ServiceList, out *serving.ServiceList, s conversion.Scope) error {
	return autoConvert_v1beta1_ServiceList_To_serving_ServiceList(in, out, s)
}

func autoConvert_serving_ServiceList_To_v1beta1_ServiceList(in *serving.ServiceList, out *ServiceList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	if in.Items != nil {
		in, out := &in.Items, &out.Items
		*out = make([]Service, len(*in))
		for i := range *in {
			if err := Convert_serving_Service_To_v1beta1_Service(&(*in)[i], &(*out)[i], s); err != nil {
				return err
			}
		}
	} else {
		out.Items = nil
	}
	return nil
}

// Convert_serving_ServiceList_To_v1beta1_ServiceList is an autogenerated conversion function.
func Convert_serving_ServiceList_To_v1beta1_ServiceList(in *serving.ServiceList, out *ServiceList, s conversion.Scope) error {
	return autoConvert_serving_ServiceList_To_v1beta1_ServiceList(in, out, s)
}

func autoConvert_v1beta1_ServiceSpec_To_serving_ServiceSpec(in *ServiceSpec, out *serving.ServiceSpec, s conversion.Scope) error {
	if err := Convert_v1beta1_ConfigurationSpec_To_serving_ConfigurationSpec(&in.ConfigurationSpec, &out.ConfigurationSpec, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_RouteSpec_To_serving_RouteSpec(&in.RouteSpec, &out.RouteSpec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_serving_ServiceSpec_To_v1beta1_ServiceSpec(in *serving.ServiceSpec, out *ServiceSpec, s conversion.Scope) error {
	// WARNING: in.DeprecatedGeneration requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedRunLatest requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedPinned requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedManual requires manual conversion: does not exist in peer-type
	// WARNING: in.DeprecatedRelease requires manual conversion: does not exist in peer-type
	if err := Convert_serving_ConfigurationSpec_To_v1beta1_ConfigurationSpec(&in.ConfigurationSpec, &out.ConfigurationSpec, s); err != nil {
		return err
	}
	if err := Convert_serving_RouteSpec_To_v1beta1_RouteSpec(&in.RouteSpec, &out.RouteSpec, s); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1beta1_ServiceStatus_To_serving_ServiceStatus(in *ServiceStatus, out *serving.ServiceStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_v1beta1_ConfigurationStatusFields_To_serving_ConfigurationStatusFields(&in.ConfigurationStatusFields, &out.ConfigurationStatusFields, s); err != nil {
		return err
	}
	if err := Convert_v1beta1_RouteStatusFields_To_serving_RouteStatusFields(&in.RouteStatusFields, &out.RouteStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1beta1_ServiceStatus_To_serving_ServiceStatus is an autogenerated conversion function.
func Convert_v1beta1_ServiceStatus_To_serving_ServiceStatus(in *ServiceStatus, out *serving.ServiceStatus, s conversion.Scope) error {
	return autoConvert_v1beta1_ServiceStatus_To_serving_ServiceStatus(in, out, s)
}

func autoConvert_serving_ServiceStatus_To_v1beta1_ServiceStatus(in *serving.ServiceStatus, out *ServiceStatus, s conversion.Scope) error {
	out.Status = in.Status
	if err := Convert_serving_RouteStatusFields_To_v1beta1_RouteStatusFields(&in.RouteStatusFields, &out.RouteStatusFields, s); err != nil {
		return err
	}
	if err := Convert_serving_ConfigurationStatusFields_To_v1beta1_ConfigurationStatusFields(&in.ConfigurationStatusFields, &out.ConfigurationStatusFields, s); err != nil {
		return err
	}
	return nil
}

// Convert_serving_ServiceStatus_To_v1beta1_ServiceStatus is an autogenerated conversion function.
func Convert_serving_ServiceStatus_To_v1beta1_ServiceStatus(in *serving.ServiceStatus, out *ServiceStatus, s conversion.Scope) error {
	return autoConvert_serving_ServiceStatus_To_v1beta1_ServiceStatus(in, out, s)
}

func autoConvert_v1beta1_TrafficTarget_To_serving_TrafficTarget(in *TrafficTarget, out *serving.TrafficTarget, s conversion.Scope) error {
	out.Tag = in.Tag
	out.RevisionName = in.RevisionName
	out.ConfigurationName = in.ConfigurationName
	out.LatestRevision = (*bool)(unsafe.Pointer(in.LatestRevision))
	out.Percent = (*int64)(unsafe.Pointer(in.Percent))
	out.URL = (*apis.URL)(unsafe.Pointer(in.URL))
	return nil
}

func autoConvert_serving_TrafficTarget_To_v1beta1_TrafficTarget(in *serving.TrafficTarget, out *TrafficTarget, s conversion.Scope) error {
	// WARNING: in.DeprecatedName requires manual conversion: does not exist in peer-type
	out.Tag = in.Tag
	out.RevisionName = in.RevisionName
	out.ConfigurationName = in.ConfigurationName
	out.LatestRevision = (*bool)(unsafe.Pointer(in.LatestRevision))
	out.Percent = (*int64)(unsafe.Pointer(in.Percent))
	out.URL = (*apis.URL)(unsafe.Pointer(in.URL))
	return nil
}
