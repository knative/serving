# This is the config file for schema generation via controller-tool's schemapatch
# command. It's used by update-schemas.sh.
k8s.io/api/core/v1.Volume:
  fieldMask:
    - Name
    - VolumeSource
k8s.io/api/core/v1.VolumeSource:
  fieldMask:
    - Secret
    - ConfigMap
    - Projected
    # Following are behind feature flags
    - EmptyDir
    - PersistentVolumeClaim
k8s.io/api/core/v1.PersistentVolumeClaimVolumeSource:
  description: "This is accessible behind a feature flag - kubernetes.podspec-persistent-volume-claim"
  additionalMarkers:
  # Part of a feature flag - so we want to omit the schema and preserve unknown fields
  - kubebuilder:validation:DropProperties
  - kubebuilder:pruning:PreserveUnknownFields
k8s.io/api/core/v1.EmptyDirVolumeSource:
  description: "This is accessible behind a feature flag - kubernetes.podspec-emptydir"
  additionalMarkers:
  # Part of a feature flag - so we want to omit the schema and preserve unknown fields
  - kubebuilder:validation:DropProperties
  - kubebuilder:pruning:PreserveUnknownFields
k8s.io/api/core/v1.VolumeProjection:
  fieldMask:
    - Secret
    - ConfigMap
    - ServiceAccountToken
    - DownwardAPI
k8s.io/api/core/v1.ConfigMapProjection:
  fieldMask:
    - LocalObjectReference
    - Items
    - Optional
k8s.io/api/core/v1.SecretProjection:
  fieldMask:
    - LocalObjectReference
    - Items
    - Optional
k8s.io/api/core/v1.ServiceAccountTokenProjection:
  fieldMask:
    - Audience
    - ExpirationSeconds
    - Path
k8s.io/api/core/v1.KeyToPath:
  fieldMask:
    - Key
    - Path
    - Mode
k8s.io/api/core/v1.PodSpec:
  fieldMask:
    - ServiceAccountName
    - Containers
    - Volumes
    - ImagePullSecrets
    - EnableServiceLinks
    - AutomountServiceAccountToken
    # Properties behind feature flags
    - Affinity
    - DNSConfig
    - DNSPolicy
    - HostAliases
    - InitContainers
    - NodeSelector
    - PriorityClassName
    - RuntimeClassName
    - SchedulerName
    - SecurityContext
    - ShareProcessNamespace
    - Tolerations
    - TopologySpreadConstraints
  fieldOverrides:
    Affinity:
      description: "This is accessible behind a feature flag - kubernetes.podspec-affinity"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    DNSPolicy:
      description: "This is accessible behind a feature flag - kubernetes.podspec-dnspolicy"
    DNSConfig:
      description: "This is accessible behind a feature flag - kubernetes.podspec-dnsconfig"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    EnableServiceLinks:
      description: 'EnableServiceLinks indicates whether information about services should be injected into pod''s environment variables, matching the syntax of Docker links. Optional: Knative defaults this to false.'
    HostAliases:
      description: "This is accessible behind a feature flag - kubernetes.podspec-hostaliases"
      itemOverride:
        description: "This is accessible behind a feature flag - kubernetes.podspec-hostaliases"
        additionalMarkers:
        # # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
    InitContainers:
      itemOverride:
        description: "This is accessible behind a feature flag - kubernetes.podspec-init-containers"
        additionalMarkers:
        # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
    NodeSelector:
      description: "This is accessible behind a feature flag - kubernetes.podspec-nodeselector"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    PriorityClassName:
      description: "This is accessible behind a feature flag - kubernetes.podspec-priorityclassname"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    RuntimeClassName:
      description: "This is accessible behind a feature flag - kubernetes.podspec-runtimeclassname"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    SchedulerName:
      description: "This is accessible behind a feature flag - kubernetes.podspec-schedulername"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    SecurityContext:
      description: "This is accessible behind a feature flag - kubernetes.podspec-securitycontext"
      additionalMarkers:
        # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
    ShareProcessNamespace:
      description: "This is accessible behind a feature flag - kubernetes.podspec-shareproccessnamespace"
      additionalMarkers:
        # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
    Tolerations:
      description: "This is accessible behind a feature flag - kubernetes.podspec-tolerations"
      itemOverride:
        description: "This is accessible behind a feature flag - kubernetes.podspec-tolerations"
        additionalMarkers:
        # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
    TopologySpreadConstraints:
      description: "This is accessible behind a feature flag - kubernetes.podspec-topologyspreadconstraints"
      additionalMarkers:
        - kubebuilder:validation:DropListMapMarkers
      itemOverride:
        description: "This is accessible behind a feature flag - kubernetes.podspec-topologyspreadconstraints"
        additionalMarkers:
        # Part of a feature flag - so we want to omit the schema and preserve unknown fields
        - kubebuilder:validation:DropProperties
        - kubebuilder:pruning:PreserveUnknownFields
k8s.io/api/core/v1.Container:
  fieldMask:
    - Name
    - Args
    - Command
    - Env
    - WorkingDir
    - EnvFrom
    - Image
    - ImagePullPolicy
    - LivenessProbe
    - Ports
    - ReadinessProbe
    - Resources
    - SecurityContext
    - TerminationMessagePath
    - TerminationMessagePolicy
    - VolumeMounts
  fieldOverrides:
    Name:
      additionalMarkers:
      - optional
    Ports:
      additionalMarkers:
      - optional
k8s.io/api/core/v1.VolumeMount:
  fieldMask:
    - Name
    - ReadOnly
    - MountPath
    - SubPath
k8s.io/api/core/v1.Probe:
  fieldMask:
    - ProbeHandler
    - InitialDelaySeconds
    - TimeoutSeconds
    - PeriodSeconds
    - SuccessThreshold
    - FailureThreshold
  fieldOverrides:
    PeriodSeconds:
      description: "How often (in seconds) to perform the probe."
k8s.io/api/core/v1.ProbeHandler:
  fieldMask:
    - Exec
    - HTTPGet
    - TCPSocket
    - GRPC
k8s.io/api/core/v1.GRPCAction:
  fieldMask:
    - Port
    - Service
k8s.io/api/core/v1.ExecAction:
  fieldMask:
    - Command
k8s.io/api/core/v1.HTTPGetAction:
  fieldMask:
    - Host
    - Path
    - Scheme
    - HTTPHeaders
    - Port
  fieldOverrides:
    Port:
      additionalMarkers:
      - optional
k8s.io/api/core/v1.TCPSocketAction:
  fieldMask:
    - Host
    - Port
  fieldOverrides:
    Port:
      additionalMarkers:
      - optional
k8s.io/api/core/v1.ContainerPort:
  fieldMask:
    - ContainerPort
    - Name
    - Protocol
k8s.io/api/core/v1.EnvVar:
  fieldMask:
    - Name
    - Value
    - ValueFrom
k8s.io/api/core/v1.EnvVarSource:
  fieldMask:
    - ConfigMapKeyRef
    - SecretKeyRef
    - FieldRef
    - ResourceFieldRef
  fieldOverrides:
    FieldRef:
      description: "This is accessible behind a feature flag - kubernetes.podspec-fieldref"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
    ResourceFieldRef:
      description: "This is accessible behind a feature flag - kubernetes.podspec-fieldref"
      additionalMarkers:
      # Part of a feature flag - so we want to omit the schema and preserve unknown fields
      - kubebuilder:validation:DropProperties
      - kubebuilder:pruning:PreserveUnknownFields
k8s.io/api/core/v1.LocalObjectReference:
  fieldMask:
    - Name
k8s.io/api/core/v1.ConfigMapKeySelectorMask:
  fieldMask:
    - Key
    - Optional
    - LocalObjectReference
k8s.io/api/core/v1.SecretKeySelectorMask:
  fieldMask:
    - Key
    - Optional
    - LocalObjectReference
k8s.io/api/core/v1.ConfigMapEnvSource:
  fieldMask:
    - Optional
    - LocalObjectReference
k8s.io/api/core/v1.SecretEnvSource:
  fieldMask:
    - Optional
    - LocalObjectReference
k8s.io/api/core/v1.EnvFromSource:
  fieldMask:
    - Prefix
    - ConfigMapRef
    - SecretRef
k8s.io/api/core/v1.ResourceRequirementsMask:
  fieldMask:
    - Limits
    - Requests
k8s.io/api/core/v1.SecurityContext:
  fieldMask:
    - AllowPrivilegeEscalation
    - Capabilities
    - ReadOnlyRootFilesystem
    - RunAsGroup
    - RunAsNonRoot
    - RunAsUser
    - SeccompProfile
k8s.io/api/core/v1.Capabilities:
  fieldMask:
    - Add
    - Drop
  fieldOverrides:
    Add:
      description: "This is accessible behind a feature flag - kubernetes.containerspec-addcapabilities"
k8s.io/api/core/v1.ObjectReference:
  fieldMask:
    - APIVersion
    - Kind
    - Name
