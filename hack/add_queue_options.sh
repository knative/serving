#!/usr/bin/env bash

# Copyright 2022 The Knative Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# RTPLUGS_PKG should include a comma seperated list of go packages
# Each package should implement a plug of github.com/IBM/go-security-plugs/rtplugs
# All packages will be staticaly loaded to queue proxry
#
# Package names that will be defined in the podSpec runtimePlugins and those
# defined in the config-defaults configmap runtime-plugins parameter will be activated


# ----------- Do not edit above this line ------------------

# Comment out packages that you do not wish to load

# Add the testing workload security guard plug - harmless, yet better not use in production
RTPLUGS_PKG="${RTPLUGS_PKG},github.com/IBM/go-security-plugs/plugs/testgate"

# Add the sample workload security guard plug - do not use in production
#RTPLUGS_PKG="${RTPLUGS_PKG},github.com/IBM/go-security-plugs/plugs/rtgate"

# Add workload security guard plug (under development) - use at your own risk
#RTPLUGS_PKG="${RTPLUGS_PKG},github.com/IBM/workload-security-guard/pkg/wsgate"

# Add here additional packages that you wish to load in this template
#TPLUGS_PKG="${RTPLUGS_PKG},github.com/HomerSimpson/BestSecurityEver/shutdown"


# ----------- Do not edit below this line ------------------

cd cmd/queue

mv -n main.go main.go.orig

echo "------------------------"
echo "Generating main.go"

cat <<EOT > main.go
// Code generated by $0. DO NOT EDIT.
package main

import "os"

import "github.com/IBM/go-security-plugs/qpsecurity"
import "knative.dev/serving/pkg/queue/sharedmain"

EOT

IFS=","
for p in ${RTPLUGS_PKG}
do
  # process
  if [ ! -z "$p" ]
  then
    echo import _ \"$p\"
    echo "import _ \"$p\"" >> main.go
    go get $p
    PLUGNAME="${p##*/}"
    RTPLUGS_NAMES="${RTPLUGS_NAMES}${RTPLUGS_NAMES:+,}${PLUGNAME}"
  fi
done
echo "Active plugs: ${RTPLUGS_NAMES}"

cat <<EOT >> main.go
func main() {
    os.Setenv("RTPLUGS", "${RTPLUGS_NAMES}")

    qOpt := qpsecurity.NewQPSecurityPlugs()
    defer qOpt.Shutdown()

    sharedmain.Main(qOpt.Setup)
}
EOT
echo "--------------- resulting main.go -----------"
cat main.go

cd ../..
go mod tidy
go mod vendor
